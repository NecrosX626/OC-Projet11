{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nconst url = \"http://localhost:3001/api/v1/\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    profile: null,\n    token: null,\n    loading: \"idle\"\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.loading = \"idle\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginRequest.pending, state => {\n      state.loading = \"pending\";\n    }).addCase(loginRequest.fulfilled, (state, action) => {\n      state.loading = \"succeeded\";\n      state.token = action.payload;\n    }).addCase(profileRequest.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    });\n  }\n});\n\n//Async Logic\n\nexport const loginRequest = createAsyncThunk('user/loginRequest', async () => {\n  const usernameInput = document.querySelector(\"#username\");\n  const passwordInput = document.querySelector(\"#password\");\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      \"accept\": \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify({\n      email: usernameInput.value,\n      password: passwordInput.value\n    })\n  };\n  const accessToken = await fetch(url + \"user/login\", postMethod).then(r => r.json()).then(json => json.body.token);\n  return accessToken;\n});\nexport const profileRequest = createAsyncThunk('user/profileRequest', async token => {\n  console.log(\"Récuperation du Profile\", token);\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const userProfile = await fetch(url + \"user/profile\", postMethod).then(r => r.json()).then(json => json.body);\n  return userProfile;\n});\nexport default userSlice.reducer;\n\n// export const selectUser = (state) => state.auth.user\nexport const selectToken = state => state.user.token;\nexport const selectStatus = state => state.user.loading;","map":{"version":3,"names":["createAsyncThunk","createSlice","useSelector","url","userSlice","name","initialState","profile","token","loading","reducers","logout","state","user","extraReducers","builder","addCase","loginRequest","pending","fulfilled","action","payload","profileRequest","usernameInput","document","querySelector","passwordInput","postMethod","method","headers","body","JSON","stringify","email","value","password","accessToken","fetch","then","r","json","console","log","accept","Authorization","userProfile","reducer","selectToken","selectStatus"],"sources":["F:/Visual Studio/Projects/OpenClassrooms/Projet 11 bkp/argent-bank/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst url = \"http://localhost:3001/api/v1/\"\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        profile: null,\r\n        token: null,\r\n        loading: \"idle\",\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.user = null\r\n            state.token = null\r\n            state.loading = \"idle\"\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(loginRequest.pending, (state) => {\r\n            state.loading = \"pending\"\r\n        })\r\n        .addCase(loginRequest.fulfilled, (state, action) => {\r\n            state.loading = \"succeeded\"\r\n            state.token = action.payload\r\n        })\r\n        .addCase(profileRequest.fulfilled, (state, action) => {\r\n            state.profile = action.payload\r\n        })\r\n    }\r\n})\r\n\r\n//Async Logic\r\n\r\nexport const loginRequest = createAsyncThunk(\r\n    'user/loginRequest',\r\n    async () => {\r\n        const usernameInput = document.querySelector(\"#username\");\r\n        const passwordInput = document.querySelector(\"#password\");       \r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"accept\" : \"application/json\",\r\n              \"Content-type\" : \"application/json; charset=UTF-8\",\r\n            },\r\n            body: JSON.stringify({\r\n              email: usernameInput.value,\r\n              password: passwordInput.value,\r\n            }),\r\n          }\r\n        const accessToken = await fetch(url + \"user/login\", postMethod)\r\n        .then((r) => r.json())\r\n        .then((json) => json.body.token)\r\n        return accessToken\r\n    }\r\n)\r\nexport const profileRequest = createAsyncThunk(\r\n    'user/profileRequest',\r\n    async (token) => {\r\n        console.log(\"Récuperation du Profile\", token) \r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n              }\r\n          }\r\n        const userProfile = await fetch(url + \"user/profile\", postMethod)\r\n        .then((r) => r.json())\r\n        .then((json) => json.body)\r\n        return userProfile\r\n    }\r\n)\r\n\r\n\r\nexport default userSlice.reducer\r\n\r\n// export const selectUser = (state) => state.auth.user\r\nexport const selectToken = (state) => state.user.token\r\nexport const selectStatus = (state) => state.user.loading\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}