{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n//Async Logic\nconst url = \"http://localhost:3001/api/v1/\";\nexport const loginRequest = createAsyncThunk('user/loginRequest', async (userLogs, {\n  rejectWithValue\n}) => {\n  console.log(\"Tentative de Connexion\");\n  const usernameInput = userLogs.get(\"username\");\n  const passwordInput = userLogs.get(\"password\");\n\n  // const usernameInput = document.querySelector(\"#username\");\n  // const passwordInput = document.querySelector(\"#password\");       \n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      \"accept\": \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify({\n      email: usernameInput,\n      password: passwordInput\n    })\n  };\n  const accessToken = await fetch(url + \"user/login\", postMethod).then(r => {\n    if (!r.ok) {\n      console.log(r.json());\n      return r.json();\n    }\n    return rejectWithValue(r);\n  }).then(json => json.body.token);\n  return accessToken;\n});\nexport const profileRequest = createAsyncThunk('user/profileRequest', async token => {\n  console.log(\"Récuperation du Profil\");\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const userProfile = await fetch(url + \"user/profile\", postMethod).then(r => r.json()).then(json => json.body);\n  return userProfile;\n});\nexport const usernameUpdateRequest = createAsyncThunk('user/usernameUpdateRequest', async props => {\n  console.log(\"Mise à Jour du Pseudo vers : \", props.updatedUsername);\n  const putMethod = {\n    method: \"PUT\",\n    headers: {\n      \"accept\": \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: `Bearer ${props.token}`\n    },\n    body: JSON.stringify({\n      userName: props.updatedUsername\n    })\n  };\n  const updatedProfile = await fetch(url + \"user/profile\", putMethod).then(r => r.json()).then(json => json.body);\n  return updatedProfile;\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    profile: null,\n    token: JSON.parse(localStorage.getItem(\"token\")) || null,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.profile = null;\n      state.token = null;\n      localStorage.removeItem(\"token\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginRequest.fulfilled, (state, action) => {\n      state.token = action.payload;\n      localStorage.setItem(\"token\", JSON.stringify(state.token));\n    }).addCase(loginRequest.rejected, (state, action) => {\n      state.token = null;\n      state.error = \"Erreur lors de la connexion\";\n    }).addCase(profileRequest.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    }).addCase(usernameUpdateRequest.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    });\n  }\n});\nexport default userSlice.reducer;\n\n// export const selectUser = (state) => state.auth.user\nexport const selectToken = state => state.user.token;\nexport const selectProfile = state => state.user.profile;","map":{"version":3,"names":["createAsyncThunk","createSlice","url","loginRequest","userLogs","rejectWithValue","console","log","usernameInput","get","passwordInput","postMethod","method","headers","body","JSON","stringify","email","password","accessToken","fetch","then","r","ok","json","token","profileRequest","accept","Authorization","userProfile","usernameUpdateRequest","props","updatedUsername","putMethod","userName","updatedProfile","userSlice","name","initialState","profile","parse","localStorage","getItem","error","reducers","logout","state","removeItem","extraReducers","builder","addCase","fulfilled","action","payload","setItem","rejected","reducer","selectToken","user","selectProfile"],"sources":["F:/Visual Studio/Projects/OpenClassrooms/Projet 11 bkp/argent-bank/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\n//Async Logic\r\nconst url = \"http://localhost:3001/api/v1/\"\r\n\r\nexport const loginRequest = createAsyncThunk(\r\n    'user/loginRequest',\r\n    async (userLogs, {rejectWithValue}) => {\r\n        console.log(\"Tentative de Connexion\")\r\n        const usernameInput = userLogs.get(\"username\")\r\n        const passwordInput = userLogs.get(\"password\")\r\n\r\n        // const usernameInput = document.querySelector(\"#username\");\r\n        // const passwordInput = document.querySelector(\"#password\");       \r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"accept\" : \"application/json\",\r\n              \"Content-type\" : \"application/json; charset=UTF-8\",\r\n            },\r\n            body: JSON.stringify({\r\n              email: usernameInput,\r\n              password: passwordInput,\r\n            }),\r\n          }\r\n        const accessToken = await fetch(url + \"user/login\", postMethod)\r\n        .then((r) => {\r\n            if (!r.ok){\r\n                console.log(r.json())\r\n                return r.json()\r\n            }\r\n            \r\n            return rejectWithValue(r)\r\n        })\r\n        .then((json) => json.body.token)\r\n        return accessToken\r\n    }\r\n)\r\nexport const profileRequest = createAsyncThunk(\r\n    'user/profileRequest',\r\n    async (token) => {\r\n        console.log(\"Récuperation du Profil\") \r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n          }\r\n        const userProfile = await fetch(url + \"user/profile\", postMethod)\r\n        .then((r) => r.json())\r\n        .then((json) => json.body)\r\n        return userProfile\r\n    }\r\n)\r\nexport const usernameUpdateRequest = createAsyncThunk(\r\n    'user/usernameUpdateRequest',\r\n    async (props) => {\r\n        console.log(\"Mise à Jour du Pseudo vers : \", props.updatedUsername)\r\n        const putMethod = {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"accept\" : \"application/json\",\r\n              \"Content-type\" : \"application/json; charset=UTF-8\",\r\n              Authorization: `Bearer ${props.token}`\r\n            },\r\n            body: JSON.stringify({\r\n                userName: props.updatedUsername\r\n            }),\r\n          }\r\n        const updatedProfile = await fetch(url + \"user/profile\", putMethod)\r\n        .then((r) => r.json())\r\n        .then((json) => json.body)\r\n        return updatedProfile\r\n    }\r\n)\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        profile: null,\r\n        token: JSON.parse(localStorage.getItem(\"token\")) || null,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.profile = null\r\n            state.token = null\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(loginRequest.fulfilled, (state, action) => {\r\n            state.token = action.payload\r\n            localStorage.setItem(\"token\", JSON.stringify(state.token))\r\n        })\r\n        .addCase(loginRequest.rejected, (state, action) => {\r\n            state.token = null\r\n            state.error = \"Erreur lors de la connexion\"\r\n        })\r\n        .addCase(profileRequest.fulfilled, (state, action) => {\r\n            state.profile = action.payload\r\n        })\r\n        .addCase(usernameUpdateRequest.fulfilled, (state, action) => {\r\n            state.profile = action.payload\r\n        })\r\n    }\r\n})\r\n\r\nexport default userSlice.reducer\r\n\r\n// export const selectUser = (state) => state.auth.user\r\nexport const selectToken = (state) => state.user.token\r\nexport const selectProfile = (state) => state.user.profile\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}