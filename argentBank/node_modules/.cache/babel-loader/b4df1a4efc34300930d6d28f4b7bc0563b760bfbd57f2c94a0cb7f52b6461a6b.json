{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst url = \"http://localhost:3001/api/v1/\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    profile: null,\n    token: null\n  },\n  reducers: {\n    logout: state => {\n      state.profile = null;\n      state.token = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginRequest.fulfilled, (state, action) => {\n      state.token = action.payload;\n    }).addCase(profileRequest.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    });\n  }\n});\n\n//Async Logic\n\nexport const loginRequest = createAsyncThunk('user/loginRequest', async () => {\n  console.log(\"Tentative de Connexion\");\n  const usernameInput = document.querySelector(\"#username\");\n  const passwordInput = document.querySelector(\"#password\");\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      \"accept\": \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify({\n      email: usernameInput.value,\n      password: passwordInput.value\n    })\n  };\n  const accessToken = await fetch(url + \"user/login\", postMethod).then(r => r.json()).then(json => json.body.token);\n  return accessToken;\n});\nexport const profileRequest = createAsyncThunk('user/profileRequest', async token => {\n  console.log(\"Récuperation du Profil\");\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const userProfile = await fetch(url + \"user/profile\", postMethod).then(r => r.json()).then(json => json.body);\n  return userProfile;\n});\nexport const usernameUpdateRequest = createAsyncThunk('user/usernameUpdateRequest', async (token, updatedUsername) => {\n  console.log(\"Mise à Jour d\");\n  const putMethod = {\n    method: \"PUT\",\n    headers: {\n      \"accept\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      username: updatedUsername\n    })\n  };\n  await fetch(url + \"user/profile\", putMethod);\n});\nexport default userSlice.reducer;\n\n// export const selectUser = (state) => state.auth.user\nexport const selectToken = state => state.user.token;\nexport const selectProfile = state => state.user.profile;","map":{"version":3,"names":["createAsyncThunk","createSlice","url","userSlice","name","initialState","profile","token","reducers","logout","state","extraReducers","builder","addCase","loginRequest","fulfilled","action","payload","profileRequest","console","log","usernameInput","document","querySelector","passwordInput","postMethod","method","headers","body","JSON","stringify","email","value","password","accessToken","fetch","then","r","json","accept","Authorization","userProfile","usernameUpdateRequest","updatedUsername","putMethod","username","reducer","selectToken","user","selectProfile"],"sources":["F:/Visual Studio/Projects/OpenClassrooms/Projet 11 bkp/argent-bank/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst url = \"http://localhost:3001/api/v1/\"\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        profile: null,\r\n        token: null\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.profile = null\r\n            state.token = null\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(loginRequest.fulfilled, (state, action) => {\r\n            state.token = action.payload\r\n        })\r\n        .addCase(profileRequest.fulfilled, (state, action) => {\r\n            state.profile = action.payload\r\n        })\r\n    }\r\n})\r\n\r\n//Async Logic\r\n\r\nexport const loginRequest = createAsyncThunk(\r\n    'user/loginRequest',\r\n    async () => {\r\n        console.log(\"Tentative de Connexion\")\r\n        const usernameInput = document.querySelector(\"#username\");\r\n        const passwordInput = document.querySelector(\"#password\");       \r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"accept\" : \"application/json\",\r\n              \"Content-type\" : \"application/json; charset=UTF-8\",\r\n            },\r\n            body: JSON.stringify({\r\n              email: usernameInput.value,\r\n              password: passwordInput.value,\r\n            }),\r\n          }\r\n        const accessToken = await fetch(url + \"user/login\", postMethod)\r\n        .then((r) => r.json())\r\n        .then((json) => json.body.token)\r\n        return accessToken\r\n    }\r\n)\r\nexport const profileRequest = createAsyncThunk(\r\n    'user/profileRequest',\r\n    async (token) => {\r\n        console.log(\"Récuperation du Profil\") \r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n          }\r\n        const userProfile = await fetch(url + \"user/profile\", postMethod)\r\n        .then((r) => r.json())\r\n        .then((json) => json.body)\r\n        return userProfile\r\n    }\r\n)\r\nexport const usernameUpdateRequest = createAsyncThunk(\r\n    'user/usernameUpdateRequest',\r\n    async (token, updatedUsername) => {\r\n        console.log(\"Mise à Jour d\")\r\n        const putMethod = {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"accept\" : \"application/json\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                username: updatedUsername\r\n            }),\r\n          }\r\n        await fetch(url + \"user/profile\", putMethod)\r\n        \r\n    }\r\n)\r\n\r\nexport default userSlice.reducer\r\n\r\n// export const selectUser = (state) => state.auth.user\r\nexport const selectToken = (state) => state.user.token\r\nexport const selectProfile = (state) => state.user.profile\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}