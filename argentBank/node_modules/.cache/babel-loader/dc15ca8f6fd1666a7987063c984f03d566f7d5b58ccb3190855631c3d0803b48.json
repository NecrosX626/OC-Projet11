{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst url = \"localhost:3001/api/v1/\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n    token: null,\n    loading: \"idle\"\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginRequest.fulfilled, (state, action) => {\n      state.token = action.payload;\n    });\n  }\n});\n\n//Async Logic\n\nexport const loginRequest = createAsyncThunk('user/requestLogin', async () => {\n  const usernameInput = document.querySelector(\"#username\");\n  const passwordInput = document.querySelector(\"#password\");\n  console.log(usernameInput.value, passwordInput.value);\n  console.log();\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      \"accept\": \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify({\n      email: usernameInput.value,\n      password: passwordInput.value\n    })\n  };\n  const accessToken = await fetch(url + \"user/login\", postMethod).then(r => r.json()).then(result => console.log(result));\n  return accessToken;\n});\nexport default userSlice.reducer;\n\n// export const selectUser = (state) => state.auth.user\nexport const selectToken = state => state.user.token;","map":{"version":3,"names":["createAsyncThunk","createSlice","url","userSlice","name","initialState","user","token","loading","reducers","extraReducers","builder","addCase","loginRequest","fulfilled","state","action","payload","usernameInput","document","querySelector","passwordInput","console","log","value","postMethod","method","headers","body","JSON","stringify","email","password","accessToken","fetch","then","r","json","result","reducer","selectToken"],"sources":["F:/Visual Studio/Projects/OpenClassrooms/Projet 11 bkp/argent-bank/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst url = \"localhost:3001/api/v1/\"\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        user: null,\r\n        token: null,\r\n        loading: \"idle\",\r\n    },\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginRequest.fulfilled, (state, action) => {\r\n            state.token = (action.payload)\r\n        })\r\n    }\r\n})\r\n\r\n//Async Logic\r\n\r\nexport const loginRequest = createAsyncThunk(\r\n    'user/requestLogin',\r\n    async () => {\r\n        const usernameInput = document.querySelector(\"#username\");\r\n        const passwordInput = document.querySelector(\"#password\");\r\n        console.log(usernameInput.value, passwordInput.value)\r\n        console.log()\r\n        const postMethod = {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"accept\" : \"application/json\",\r\n              \"Content-type\" : \"application/json; charset=UTF-8\",\r\n            },\r\n            body: JSON.stringify({\r\n              email: usernameInput.value,\r\n              password: passwordInput.value,\r\n            }),\r\n          }\r\n        const accessToken = await fetch(url + \"user/login\", postMethod)\r\n        .then((r) => r.json())\r\n        .then((result) => console.log(result))\r\n        return accessToken\r\n    }\r\n)\r\n\r\nexport default userSlice.reducer\r\n\r\n// export const selectUser = (state) => state.auth.user\r\nexport const selectToken = (state) => state.user.token\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,GAAG,GAAG,wBAAwB;AAEpC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACC,YAAY,CAACC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACR,KAAK,GAAIS,MAAM,CAACC,OAAQ;IAClC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMJ,YAAY,GAAGb,gBAAgB,CACxC,mBAAmB,EACnB,YAAY;EACR,MAAMkB,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;EACzD,MAAMC,aAAa,GAAGF,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;EACzDE,OAAO,CAACC,GAAG,CAACL,aAAa,CAACM,KAAK,EAAEH,aAAa,CAACG,KAAK,CAAC;EACrDF,OAAO,CAACC,GAAG,CAAC,CAAC;EACb,MAAME,UAAU,GAAG;IACfC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAG,kBAAkB;MAC7B,cAAc,EAAG;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAEb,aAAa,CAACM,KAAK;MAC1BQ,QAAQ,EAAEX,aAAa,CAACG;IAC1B,CAAC;EACH,CAAC;EACH,MAAMS,WAAW,GAAG,MAAMC,KAAK,CAAChC,GAAG,GAAG,YAAY,EAAEuB,UAAU,CAAC,CAC9DU,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAEG,MAAM,IAAKhB,OAAO,CAACC,GAAG,CAACe,MAAM,CAAC,CAAC;EACtC,OAAOL,WAAW;AACtB,CACJ,CAAC;AAED,eAAe9B,SAAS,CAACoC,OAAO;;AAEhC;AACA,OAAO,MAAMC,WAAW,GAAIzB,KAAK,IAAKA,KAAK,CAACT,IAAI,CAACC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}