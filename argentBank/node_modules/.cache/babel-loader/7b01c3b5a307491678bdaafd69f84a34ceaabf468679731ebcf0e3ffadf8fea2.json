{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n//Async Logic\nconst url = \"http://localhost:3001/api/v1/\";\nexport const loginRequest = createAsyncThunk(\"user/loginRequest\", async (userLogs, {\n  rejectWithValue\n}) => {\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify({\n      email: userLogs.get(\"username\"),\n      password: userLogs.get(\"password\")\n    })\n  };\n  const accessToken = await fetch(url + \"user/login\", postMethod).then(r => {\n    if (!r.ok) {\n      return r.json().then(error => rejectWithValue(error.message));\n    } else {\n      return r.json().then(json => json.body.token);\n    }\n  });\n  return accessToken;\n});\nexport const profileRequest = createAsyncThunk(\"user/profileRequest\", async (token, {\n  rejectWithValue\n}) => {\n  const postMethod = {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const userProfile = await fetch(url + \"user/profile\", postMethod).then(r => {\n    if (!r.ok) {\n      return r.json().then(error => rejectWithValue(error.message));\n    } else {\n      return r.json().then(json => json.body);\n    }\n  });\n  return userProfile;\n});\nexport const usernameUpdateRequest = createAsyncThunk(\"user/usernameUpdateRequest\", async (token, formData, {\n  rejectWithValue\n}) => {\n  const putMethod = {\n    method: \"PUT\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      userName: props.updatedUsername\n    })\n  };\n  const updatedProfile = await fetch(url + \"user/profile\", putMethod).then(r => {\n    if (!r.ok) {\n      return r.json().then(error => rejectWithValue(error.message));\n    } else {\n      return r.json().then(json => json.body);\n    }\n  });\n  return updatedProfile;\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    profile: null,\n    token: JSON.parse(localStorage.getItem(\"token\")) || null,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.profile = null;\n      state.token = null;\n      state.error = null;\n      localStorage.removeItem(\"token\");\n    },\n    resetError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginRequest.fulfilled, (state, action) => {\n      state.token = action.payload;\n      localStorage.setItem(\"token\", JSON.stringify(state.token));\n    }).addCase(loginRequest.rejected, (state, action) => {\n      state.token = null;\n      state.error = action.payload;\n    }).addCase(profileRequest.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    }).addCase(usernameUpdateRequest.fulfilled, (state, action) => {\n      state.profile = action.payload;\n    });\n  }\n});\nexport default userSlice.reducer;\nexport const selectToken = state => state.user.token;\nexport const selectProfile = state => state.user.profile;\nexport const selectError = state => state.user.error;\nexport const {\n  logout,\n  resetError\n} = userSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","url","loginRequest","userLogs","rejectWithValue","postMethod","method","headers","accept","body","JSON","stringify","email","get","password","accessToken","fetch","then","r","ok","json","error","message","token","profileRequest","Authorization","userProfile","usernameUpdateRequest","formData","putMethod","userName","props","updatedUsername","updatedProfile","userSlice","name","initialState","profile","parse","localStorage","getItem","reducers","logout","state","removeItem","resetError","extraReducers","builder","addCase","fulfilled","action","payload","setItem","rejected","reducer","selectToken","user","selectProfile","selectError","actions"],"sources":["F:/Visual Studio/Projects/OpenClassrooms/Projet 11 bkp/argent-bank/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//Async Logic\r\nconst url = \"http://localhost:3001/api/v1/\";\r\n\r\nexport const loginRequest = createAsyncThunk(\r\n  \"user/loginRequest\",\r\n  async (userLogs, { rejectWithValue }) => {\r\n    const postMethod = {\r\n      method: \"POST\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: userLogs.get(\"username\"),\r\n        password: userLogs.get(\"password\"),\r\n      }),\r\n    };\r\n    const accessToken = await fetch(url + \"user/login\", postMethod).then(\r\n      (r) => {\r\n        if (!r.ok) {\r\n          return r.json().then((error) => rejectWithValue(error.message));\r\n        } else {\r\n          return r.json().then((json) => json.body.token);\r\n        }\r\n      }\r\n    );\r\n    return accessToken;\r\n  }\r\n);\r\nexport const profileRequest = createAsyncThunk(\r\n  \"user/profileRequest\",\r\n  async (token, { rejectWithValue }) => {\r\n    const postMethod = {\r\n      method: \"POST\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const userProfile = await fetch(url + \"user/profile\", postMethod).then(\r\n      (r) => {\r\n        if (!r.ok) {\r\n          return r.json().then((error) => rejectWithValue(error.message));\r\n        } else {\r\n          return r.json().then((json) => json.body);\r\n        }\r\n      }\r\n    );\r\n    return userProfile;\r\n  }\r\n);\r\nexport const usernameUpdateRequest = createAsyncThunk(\r\n  \"user/usernameUpdateRequest\",\r\n  async (token, formData, { rejectWithValue }) => {\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        userName: props.updatedUsername,\r\n      }),\r\n    };\r\n    const updatedProfile = await fetch(url + \"user/profile\", putMethod).then(\r\n      (r) => {\r\n        if (!r.ok) {\r\n          return r.json().then((error) => rejectWithValue(error.message));\r\n        } else {\r\n          return r.json().then((json) => json.body);\r\n        }\r\n      }\r\n    );\r\n    return updatedProfile;\r\n  }\r\n);\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    profile: null,\r\n    token: JSON.parse(localStorage.getItem(\"token\")) || null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.profile = null;\r\n      state.token = null;\r\n      state.error = null;\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n    resetError: (state) => {\r\n      state.error = null\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginRequest.fulfilled, (state, action) => {\r\n        state.token = action.payload;\r\n        localStorage.setItem(\"token\", JSON.stringify(state.token));\r\n      })\r\n      .addCase(loginRequest.rejected, (state, action) => {\r\n        state.token = null;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(profileRequest.fulfilled, (state, action) => {\r\n        state.profile = action.payload;\r\n      })\r\n      .addCase(usernameUpdateRequest.fulfilled, (state, action) => {\r\n        state.profile = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\n\r\nexport const selectToken = (state) => state.user.token;\r\nexport const selectProfile = (state) => state.user.profile;\r\nexport const selectError = (state) => state.user.error;\r\n\r\nexport const {logout, resetError} = userSlice.actions"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}