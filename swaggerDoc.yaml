swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/{id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch User Transactions
      description: Returns collection of transactions from specified account
      parameters:
        - in: path
          name: id
          description: ID of specified account
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items: 
              $ref: '#/definitions/UserTransaction'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Show specified transaction details
      description: API for fetching details of specified transaction
      parameters:
        - in: path
          name: id
          description: ID of specified transaction
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successully
          schema:
            $ref: '#/definitions/UserTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Transaction not found
          schema:
            $ref: '#/definitions/UserTransactionError'
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transaction details
      description: Updates details of specified transaction
      parameters:
        - in: path
          name: id
          description: ID of specified transaction
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated Informations
          required: true
          schema:
            $ref: '#/definitions/UserTransactionUpdate'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User transaction not found
          schema:
            $ref: '#/definitions/UserTransactionError'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UserTransactionError'
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserTransaction:
    type: object
    properties:
      id:
        type: integer
        description: transaction id
      date:
        type: string
        format: date-type
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string
      amount:
        type: number
      balance:
        type: number
  UserTransactionUpdate:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  UserTransactionError:
    type: object
    required: [message]
    properties:
      code:
        type: integer
      message:
        type: string